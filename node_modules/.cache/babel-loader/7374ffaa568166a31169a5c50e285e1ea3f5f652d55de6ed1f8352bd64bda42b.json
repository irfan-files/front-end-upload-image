{"ast":null,"code":"var _jsxFileName = \"/Users/irfan/Documents/Programming/downloaderPict/image-downloader/front-end-upload-image/src/ImageLinkList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./ImageLinkList.css\"; // Import stylesheet for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageLinkList = () => {\n  _s();\n  const [linkString, setLinkString] = useState(\"\");\n  useEffect(() => {\n    axios.get(\"http://localhost:3001/uploads\").then(response => {\n      if (Array.isArray(response.data.files)) {\n        // Sort files by their numeric value\n        const sortedFiles = response.data.files.sort((a, b) => {\n          const numA = parseInt(a.split(\".\")[0], 10);\n          const numB = parseInt(b.split(\".\")[0], 10);\n          return numA - numB;\n        });\n        // Combine sorted file links into one string with newline separation\n        const combinedLinks = sortedFiles.map(file => `http://localhost:3001/uploads/${file}`).join(\"\\n\");\n        setLinkString(combinedLinks);\n      } else {\n        console.error('Response does not contain an array named \"files\":', response.data);\n      }\n    }).catch(error => {\n      console.error(\"There was an error fetching the images!\", error);\n    });\n  }, []);\n  const handleCopyClick = () => {\n    navigator.clipboard.writeText(linkString).then(() => {\n      alert(\"Link copied to clipboard!\");\n    }).catch(err => {\n      console.error(\"Failed to copy:\", err);\n      alert(\"Failed to copy link to clipboard. Please try again.\");\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Image Gallery Links\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"textarea-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: linkString,\n        readOnly: true,\n        className: \"link-textarea\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCopyClick,\n        className: \"copy-button\",\n        children: \"Salin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageLinkList, \"91KTd3G1E+0CPK9GWhPK2BXcQLk=\");\n_c = ImageLinkList;\nexport default ImageLinkList;\nvar _c;\n$RefreshReg$(_c, \"ImageLinkList\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","ImageLinkList","_s","linkString","setLinkString","get","then","response","Array","isArray","data","files","sortedFiles","sort","a","b","numA","parseInt","split","numB","combinedLinks","map","file","join","console","error","catch","handleCopyClick","navigator","clipboard","writeText","alert","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","readOnly","onClick","_c","$RefreshReg$"],"sources":["/Users/irfan/Documents/Programming/downloaderPict/image-downloader/front-end-upload-image/src/ImageLinkList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./ImageLinkList.css\"; // Import stylesheet for styling\n\nconst ImageLinkList = () => {\n  const [linkString, setLinkString] = useState(\"\");\n\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:3001/uploads\")\n      .then((response) => {\n        if (Array.isArray(response.data.files)) {\n          // Sort files by their numeric value\n          const sortedFiles = response.data.files.sort((a, b) => {\n            const numA = parseInt(a.split(\".\")[0], 10);\n            const numB = parseInt(b.split(\".\")[0], 10);\n            return numA - numB;\n          });\n          // Combine sorted file links into one string with newline separation\n          const combinedLinks = sortedFiles\n            .map((file) => `http://localhost:3001/uploads/${file}`)\n            .join(\"\\n\");\n          setLinkString(combinedLinks);\n        } else {\n          console.error(\n            'Response does not contain an array named \"files\":',\n            response.data\n          );\n        }\n      })\n      .catch((error) => {\n        console.error(\"There was an error fetching the images!\", error);\n      });\n  }, []);\n\n  const handleCopyClick = () => {\n    navigator.clipboard\n      .writeText(linkString)\n      .then(() => {\n        alert(\"Link copied to clipboard!\");\n      })\n      .catch((err) => {\n        console.error(\"Failed to copy:\", err);\n        alert(\"Failed to copy link to clipboard. Please try again.\");\n      });\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Image Gallery Links</h1>\n      <div className=\"textarea-container\">\n        <textarea value={linkString} readOnly className=\"link-textarea\" />\n        <button onClick={handleCopyClick} className=\"copy-button\">\n          Salin\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default ImageLinkList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}