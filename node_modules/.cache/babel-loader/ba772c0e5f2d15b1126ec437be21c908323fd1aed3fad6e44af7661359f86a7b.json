{"ast":null,"code":"var _jsxFileName = \"/Users/irfan/Documents/Programming/downloaderPict/image-downloader/src/ImageViewDownload.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ImageViewDownload() {\n  _s();\n  const [images, setImages] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Fetch initial list of images from the backend\n    fetchImages();\n\n    // Polling interval setup\n    const interval = setInterval(fetchImages, 1000); // Polling every 5 seconds\n\n    return () => {\n      clearInterval(interval); // Clean up interval on component unmount\n    };\n  }, []);\n  const fetchImages = () => {\n    axios.get(\"http://localhost:3001/downloads\").then(response => {\n      setImages(response.data.files);\n      setLoading(false);\n    }).catch(error => {\n      console.error(\"Error fetching images:\", error);\n      setLoading(false);\n    });\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ImageViewDownload\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Downloaded Images\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-grid\",\n      children: images.map(image => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `http://localhost:3001/downloads/${image}`,\n          alt: image,\n          className: \"image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: `http://localhost:3001/downloads/${image}`,\n          download: true,\n          className: \"download-link\",\n          children: \"Download\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)]\n      }, image, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"download-all\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"http://localhost:3001/download-all\",\n        download: true,\n        className: \"download-all-link\",\n        children: \"Download All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(ImageViewDownload, \"QBslGb/yTBcjcjShOOciEvHlA24=\");\n_c = ImageViewDownload;\nexport default ImageViewDownload;\nvar _c;\n$RefreshReg$(_c, \"ImageViewDownload\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","ImageViewDownload","_s","images","setImages","loading","setLoading","fetchImages","interval","setInterval","clearInterval","get","then","response","data","files","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","image","src","alt","href","download","_c","$RefreshReg$"],"sources":["/Users/irfan/Documents/Programming/downloaderPict/image-downloader/src/ImageViewDownload.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\n\nfunction ImageViewDownload() {\n  const [images, setImages] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // Fetch initial list of images from the backend\n    fetchImages();\n\n    // Polling interval setup\n    const interval = setInterval(fetchImages, 1000); // Polling every 5 seconds\n\n    return () => {\n      clearInterval(interval); // Clean up interval on component unmount\n    };\n  }, []);\n\n  const fetchImages = () => {\n    axios\n      .get(\"http://localhost:3001/downloads\")\n      .then((response) => {\n        setImages(response.data.files);\n        setLoading(false);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching images:\", error);\n        setLoading(false);\n      });\n  };\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div className=\"ImageViewDownload\">\n      <h1>Downloaded Images</h1>\n      <div className=\"image-grid\">\n        {images.map((image) => (\n          <div key={image} className=\"image-item\">\n            <img\n              src={`http://localhost:3001/downloads/${image}`}\n              alt={image}\n              className=\"image\"\n            />\n            <a\n              href={`http://localhost:3001/downloads/${image}`}\n              download\n              className=\"download-link\"\n            >\n              Download\n            </a>\n          </div>\n        ))}\n      </div>\n      <div className=\"download-all\">\n        <a\n          href=\"http://localhost:3001/download-all\"\n          download\n          className=\"download-all-link\"\n        >\n          Download All\n        </a>\n      </div>\n    </div>\n  );\n}\n\nexport default ImageViewDownload;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}