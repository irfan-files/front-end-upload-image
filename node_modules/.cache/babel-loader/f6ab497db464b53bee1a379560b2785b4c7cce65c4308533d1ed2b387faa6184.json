{"ast":null,"code":"var _jsxFileName = \"/Users/irfan/Documents/Programming/downloaderPict/image-downloader/front-end-upload-image/src/DownloadAllFilesButton.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DownloadAllFilesButton = () => {\n  const handleDownload = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:3001/download-all\", {\n        responseType: \"blob\" // Important for handling binary data\n      });\n\n      // Create a link element to trigger the download\n      const url = window.URL.createObjectURL(new Blob([response.data]));\n      const link = document.createElement(\"a\");\n      link.href = url;\n      link.setAttribute(\"download\", \"allFiles.zip\"); // Specify the name for the download\n      document.body.appendChild(link);\n      link.click();\n      link.remove(); // Clean up after the download\n    } catch (error) {\n      console.error(\"Error downloading files:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handleDownload,\n    children: \"Download All Files as ZIP\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 10\n  }, this);\n};\n_c = DownloadAllFilesButton;\nexport default DownloadAllFilesButton;\nvar _c;\n$RefreshReg$(_c, \"DownloadAllFilesButton\");","map":{"version":3,"names":["React","axios","jsxDEV","_jsxDEV","DownloadAllFilesButton","handleDownload","response","get","responseType","url","window","URL","createObjectURL","Blob","data","link","document","createElement","href","setAttribute","body","appendChild","click","remove","error","console","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/irfan/Documents/Programming/downloaderPict/image-downloader/front-end-upload-image/src/DownloadAllFilesButton.js"],"sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\n\nconst DownloadAllFilesButton = () => {\n  const handleDownload = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:3001/download-all\", {\n        responseType: \"blob\", // Important for handling binary data\n      });\n\n      // Create a link element to trigger the download\n      const url = window.URL.createObjectURL(new Blob([response.data]));\n      const link = document.createElement(\"a\");\n      link.href = url;\n      link.setAttribute(\"download\", \"allFiles.zip\"); // Specify the name for the download\n      document.body.appendChild(link);\n      link.click();\n      link.remove(); // Clean up after the download\n    } catch (error) {\n      console.error(\"Error downloading files:\", error);\n    }\n  };\n\n  return <button onClick={handleDownload}>Download All Files as ZIP</button>;\n};\n\nexport default DownloadAllFilesButton;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,sBAAsB,GAAGA,CAAA,KAAM;EACnC,MAAMC,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAG,CAAC,oCAAoC,EAAE;QACrEC,YAAY,EAAE,MAAM,CAAE;MACxB,CAAC,CAAC;;MAEF;MACA,MAAMC,GAAG,GAAGC,MAAM,CAACC,GAAG,CAACC,eAAe,CAAC,IAAIC,IAAI,CAAC,CAACP,QAAQ,CAACQ,IAAI,CAAC,CAAC,CAAC;MACjE,MAAMC,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;MACxCF,IAAI,CAACG,IAAI,GAAGT,GAAG;MACfM,IAAI,CAACI,YAAY,CAAC,UAAU,EAAE,cAAc,CAAC,CAAC,CAAC;MAC/CH,QAAQ,CAACI,IAAI,CAACC,WAAW,CAACN,IAAI,CAAC;MAC/BA,IAAI,CAACO,KAAK,CAAC,CAAC;MACZP,IAAI,CAACQ,MAAM,CAAC,CAAC,CAAC,CAAC;IACjB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD;EACF,CAAC;EAED,oBAAOrB,OAAA;IAAQuB,OAAO,EAAErB,cAAe;IAAAsB,QAAA,EAAC;EAAyB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;AAC5E,CAAC;AAACC,EAAA,GArBI5B,sBAAsB;AAuB5B,eAAeA,sBAAsB;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}