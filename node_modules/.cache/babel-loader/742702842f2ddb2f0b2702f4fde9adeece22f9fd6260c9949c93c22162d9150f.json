{"ast":null,"code":"var _jsxFileName = \"/Users/irfan/Documents/Programming/downloaderPict/image-downloader/src/ImageUploader.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageUploader = ({\n  onUpload\n}) => {\n  _s();\n  const [file, setFile] = useState(null);\n  const handleFileChange = event => {\n    setFile(event.target.files[0]);\n  };\n  const handleUpload = () => {\n    const reader = new FileReader();\n    reader.onload = e => {\n      try {\n        const json = JSON.parse(e.target.result);\n        onUpload(json);\n      } catch (error) {\n        console.error(\"Error parsing JSON:\", error);\n        alert(\"Invalid JSON file.\");\n      }\n    };\n    if (file) {\n      reader.readAsText(file);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.uploader,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".json\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      style: styles.uploadButton,\n      children: \"Upload JSON From Excel To Json\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageUploader, \"Nkb8eHkBruGouXteoqeZ1R6wRVk=\");\n_c = ImageUploader;\nconst styles = {\n  uploader: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    marginBottom: \"24px\"\n  },\n  uploadButton: {\n    padding: \"10px 20px\",\n    fontSize: \"16px\",\n    fontWeight: \"bold\",\n    backgroundColor: \"#2196F3\",\n    color: \"#fff\",\n    border: \"none\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    marginTop: \"10px\"\n  }\n};\nexport default ImageUploader;\nvar _c;\n$RefreshReg$(_c, \"ImageUploader\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ImageUploader","onUpload","_s","file","setFile","handleFileChange","event","target","files","handleUpload","reader","FileReader","onload","e","json","JSON","parse","result","error","console","alert","readAsText","style","styles","uploader","children","type","accept","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","uploadButton","_c","display","flexDirection","alignItems","marginBottom","padding","fontSize","fontWeight","backgroundColor","color","border","borderRadius","cursor","marginTop","$RefreshReg$"],"sources":["/Users/irfan/Documents/Programming/downloaderPict/image-downloader/src/ImageUploader.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst ImageUploader = ({ onUpload }) => {\n  const [file, setFile] = useState(null);\n\n  const handleFileChange = (event) => {\n    setFile(event.target.files[0]);\n  };\n\n  const handleUpload = () => {\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      try {\n        const json = JSON.parse(e.target.result);\n        onUpload(json);\n      } catch (error) {\n        console.error(\"Error parsing JSON:\", error);\n        alert(\"Invalid JSON file.\");\n      }\n    };\n    if (file) {\n      reader.readAsText(file);\n    }\n  };\n\n  return (\n    <div style={styles.uploader}>\n      <input type=\"file\" accept=\".json\" onChange={handleFileChange} />\n      <button onClick={handleUpload} style={styles.uploadButton}>\n        Upload JSON From Excel To Json\n      </button>\n    </div>\n  );\n};\n\nconst styles = {\n  uploader: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    marginBottom: \"24px\",\n  },\n  uploadButton: {\n    padding: \"10px 20px\",\n    fontSize: \"16px\",\n    fontWeight: \"bold\",\n    backgroundColor: \"#2196F3\",\n    color: \"#fff\",\n    border: \"none\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    marginTop: \"10px\",\n  },\n};\n\nexport default ImageUploader;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACtC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAEtC,MAAMQ,gBAAgB,GAAIC,KAAK,IAAK;IAClCF,OAAO,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EAChC,CAAC;EAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzB,MAAMC,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;IAC/BD,MAAM,CAACE,MAAM,GAAIC,CAAC,IAAK;MACrB,IAAI;QACF,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACH,CAAC,CAACN,MAAM,CAACU,MAAM,CAAC;QACxChB,QAAQ,CAACa,IAAI,CAAC;MAChB,CAAC,CAAC,OAAOI,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;QAC3CE,KAAK,CAAC,oBAAoB,CAAC;MAC7B;IACF,CAAC;IACD,IAAIjB,IAAI,EAAE;MACRO,MAAM,CAACW,UAAU,CAAClB,IAAI,CAAC;IACzB;EACF,CAAC;EAED,oBACEJ,OAAA;IAAKuB,KAAK,EAAEC,MAAM,CAACC,QAAS;IAAAC,QAAA,gBAC1B1B,OAAA;MAAO2B,IAAI,EAAC,MAAM;MAACC,MAAM,EAAC,OAAO;MAACC,QAAQ,EAAEvB;IAAiB;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChEjC,OAAA;MAAQkC,OAAO,EAAExB,YAAa;MAACa,KAAK,EAAEC,MAAM,CAACW,YAAa;MAAAT,QAAA,EAAC;IAE3D;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAAC9B,EAAA,CA/BIF,aAAa;AAAAmC,EAAA,GAAbnC,aAAa;AAiCnB,MAAMuB,MAAM,GAAG;EACbC,QAAQ,EAAE;IACRY,OAAO,EAAE,MAAM;IACfC,aAAa,EAAE,QAAQ;IACvBC,UAAU,EAAE,QAAQ;IACpBC,YAAY,EAAE;EAChB,CAAC;EACDL,YAAY,EAAE;IACZM,OAAO,EAAE,WAAW;IACpBC,QAAQ,EAAE,MAAM;IAChBC,UAAU,EAAE,MAAM;IAClBC,eAAe,EAAE,SAAS;IAC1BC,KAAK,EAAE,MAAM;IACbC,MAAM,EAAE,MAAM;IACdC,YAAY,EAAE,KAAK;IACnBC,MAAM,EAAE,SAAS;IACjBC,SAAS,EAAE;EACb;AACF,CAAC;AAED,eAAehD,aAAa;AAAC,IAAAmC,EAAA;AAAAc,YAAA,CAAAd,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}